# Optimized picom.conf configuration (tested on an NVIDIA card)
# Gits URL: https://gist.github.com/jamescherti/59f61eeaf17ccc16e1eab2c98d699d31
# License: MIT
# Maintainer of this picom.conf: James Cherti

#################################
#             Shadows           #
#################################

# Enabled client-side shadows on windows. Note desktop windows
# (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow,
# unless explicitly requested using the wintypes option.
# shadow = false
shadow = true;

# The blur radius for shadows, in pixels. (defaults to 12)
# shadow-radius = 12
shadow-radius = 16;
# shadow-radius = 7;

# The opacity of shadows. (0.0 - 1.0, defaults to 0.75)
# shadow-opacity = .75
shadow-opacity = .5;

# The left offset for shadows, in pixels. (defaults to -15)
# shadow-offset-x = -15;
# shadow-offset-x = -7;
# shadow-offset-x = -7;

# The top offset for shadows, in pixels. (defaults to -15)
# shadow-offset-y = -15;
# shadow-offset-y = -7;

# Red color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-red = 0

# Green color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-green = 0

# Blue color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-blue = 0

# Hex string color value of shadow (#000000 - #FFFFFF, defaults to #000000). This option will override options set shadow-(red/green/blue)
# shadow-color = "#000000"

# Specify a list of conditions of windows that should have no shadow.
#
# examples:
#   shadow-exclude = "n:e:Notification";
#
# shadow-exclude = []
shadow-exclude = [
  "name = 'Notification'",
  "class_g = 'Conky'",
  "class_g ?= 'Notify-osd'",
  "class_g = 'Cairo-clock'",
  "_GTK_FRAME_EXTENTS@:c"
];

# The shadow exclude options are helpful if you have shadows enabled. Due to the way picom draws its shadows, certain applications will have visual glitches
# (most applications are fine, only apps that do weird things with xshapes or argb are affected).
# This list includes all the affected apps I found in my testing. The "! name~=''" part excludes shadows on any "Unknown" windows, this prevents a visual glitch with the XFWM alt tab switcher.
# shadow-exclude = [
#     "! name~=''",
#     "name *= 'VLC'",
#     "name *= 'compton'",
#     "name *= 'picom'",
#     "name *= 'Chromium'",
#     "name *= 'Chrome'",
#     "name *= 'brave'",
#     "name *= 'BitwigStudio'",
#     "class_g = 'Firefox' && argb",
#     "class_g = 'Conky'",
#     "class_g ?= 'Notify-osd'",
#     "_GTK_FRAME_EXTENTS@:c",
#     "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'"
# ];

# Avoid drawing shadow on all shaped windows (see also: --detect-rounded-corners)
shadow-ignore-shaped = false;

# Specify a list of conditions of windows that should have no shadow painted over, such as a dock window.
# clip-shadow-above = []

# Specify a X geometry that describes the region in which shadow should not
# be painted in, such as a dock window region. Use
#    shadow-exclude-reg = "x10+0+0"
# for example, if the 10 pixels on the bottom of the screen should not have shadows painted on.
#
# shadow-exclude-reg = ""

# Crop shadow of a window fully on a particular monitor to that monitor. This is
# currently implemented using the X RandR extension.
# crop-shadow-to-monitor = false


#################################
#           Fading              #
#################################

# Fade windows in/out when opening/closing and when opacity changes,
#  unless no-fading-openclose is used.
# fading = false
fading = true;

# Opacity change between steps while fading in. (0.01 - 1.0, defaults to 0.028)
# fade-in-step = 0.028
# fade-in-step = 0.03;
fade-in-step = 0.05;

# Opacity change between steps while fading out. (0.01 - 1.0, defaults to 0.03)
# fade-out-step = 0.03
# fade-out-step = 0.03;
fade-out-step = 0.05;

# The time between steps in fade step, in milliseconds. (> 0, defaults to 10)
# fade-delta = 10

# Specify a list of conditions of windows that should not be faded.
# fade-exclude = []

# Do not fade on window open/close.
# no-fading-openclose = false

# Do not fade destroyed ARGB windows with WM frame. Workaround of bugs in Openbox, Fluxbox, etc.
# no-fading-destroyed-argb = false


#################################
#   Transparency / Opacity      #
#################################

# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)
inactive-opacity = 0.7;

# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)
# frame-opacity = 1.0
# frame-opacity = 0.7;
frame-opacity = 1;

# Let inactive opacity set by -i override the '_NET_WM_WINDOW_OPACITY' values of windows.
# inactive-opacity-override = true
inactive-opacity-override = false;

# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)
active-opacity = 1;

# Dim inactive windows. (0.0 - 1.0, defaults to 0.0)
# inactive-dim = 0.0
inactive-dim = 0.3;

# Specify a list of conditions of windows that should never be considered focused.
focus-exclude = [
     "class_g = 'Rofi'",
     "class_g = 'Alacritty'",
     "class_g = 'Firefox'",
     "class_g = 'firefox'",
     "class_g = 'vlc'",
     "class_g = 'zoom'"
];

# Use fixed inactive dim value, instead of adjusting according to window opacity.
# Do not let dimness adjust based on window opacity: inactive-dim-fixed = true;
# inactive-dim-fixed = 1.0

# Specify a list of opacity rules, in the format `PERCENT:PATTERN`,
# like `50:name *= "Firefox"`. picom-trans is recommended over this.
# Note we don't make any guarantee about possible conflicts with other
# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.
# example:
#    opacity-rule = [ "80:class_g = 'URxvt'" ];
#
# opacity-rule = []

# i3 trasparent borders and windows
# opacity-rule = [
#     # "80:class_g = 'i3-frame' && !_NET_WM_STATE@:32a",
#     "0:_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'",
#     "70:class_g = 'Termite' && !focused",
#     "70:class_g = 'kitty' && !focused",
#     "0:_NET_WM_STATE@[0]:32a *= '_NET_WM_STATE_HIDDEN'",
#     "0:_NET_WM_STATE@[1]:32a *= '_NET_WM_STATE_HIDDEN'",
#     "0:_NET_WM_STATE@[2]:32a *= '_NET_WM_STATE_HIDDEN'",
#     "0:_NET_WM_STATE@[3]:32a *= '_NET_WM_STATE_HIDDEN'",
#     "0:_NET_WM_STATE@[4]:32a *= '_NET_WM_STATE_HIDDEN'"
# ];


